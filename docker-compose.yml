version: "3.5"

services:
  elasticsearch:
    container_name: temporal-elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:7.17.3
    networks:
      - temporal-network
    expose:
      - 9200
    volumes:
      - elasticsearch-data:/var/lib/elasticsearch/data

  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:13
    networks:
      - temporal-network
    expose:
      - 5432
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  temporal:
    container_name: temporal
    depends_on:
      - postgresql
      - elasticsearch
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      # - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - DYNAMIC_CONFIG_FILE_PATH=/etc/temporal/config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=true
      - ES_SEEDS=elasticsearch
      - ES_VERSION=v7
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/auto-setup:1.21.3
    networks:
      - temporal-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.21.3
    networks:
      - temporal-network
    stdin_open: true
    tty: true

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.14.0
    networks:
      - temporal-network
    ports:
      - 8080:8080

  flask-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-backend
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
    env_file:
      - .env
    networks:
      - temporal-network
    depends_on:
      - temporal

  temporal-worker:
    build:
      context: .
      dockerfile: temporal_workflow/Dockerfile
    container_name: temporal-worker
    env_file:
      - .env
    networks:
      - temporal-network
    depends_on:
      - temporal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "temporal", "7233"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  temporal-network:
    driver: bridge
    name: temporal-network

volumes:
  postgresql-data:
  elasticsearch-data: